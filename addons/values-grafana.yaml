# Avoid creating a bunch of RBAC rules for features we are not enabling
rbac:
  create: false
  pspEnabled: false

# Disable test pods
testFramework:
  enabled: false

podLabels:
  app: grafana

podAnnotations:
  "consul.hashicorp.com/connect-inject": "false"

# Demo only, so we will have no authentication
admin:
  existingSecret: true
ldap:
  existingSecret: true
env:
  GF_SECURITY_ADMIN_USER: "-"
  GF_SECURITY_ADMIN_PASSWORD: "-"
  GF_AUTH_BASIC_ENABLED: "false"
  GF_AUTH_ANONYMOUS_ENABLED: "true"
  GF_AUTH_ANONYMOUS_ORG_ROLE: Admin

# Expose on port 3000 to match the Consul docs (TBD)
service:
  port: 3000

# Set up out dashboards
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: 'consul'
        orgId: 1
        folder: 'consul'
        type: file
        disableDeletion: false
        options:
          path: /var/lib/grafana/dashboards/consul
      - name: 'consul-services'
        orgId: 1
        folder: 'consul'
        type: file
        disableDeletion: false
        options:
          path: /var/lib/grafana/dashboards/consul-services

dashboardsConfigMaps:
  consul: "consul-grafana-dashboards"
  consul-services: "consul-services-grafana-dashboards"

# Configure the prometheus data source. We expect prometheus:9090 in the same namespace
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        orgId: 1
        url: http://prometheus:9090
        access: proxy
        isDefault: true
        jsonData:
          timeInterval: 5s
        editable: true
